{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Question1.\
Because in the code we need to use the value of args[0] to test,and when it equals null, the ArrayIndexOutOfBounds exception will happen.\
\
Question2.\
Actually year 2000 is a leap year, but the java program tells falsely(because 2000 divided by 4 equals 0, and 2000 divided 100 also equals 0, then the program would tell that 2000 is a leap year regardless the following code).\
\
Question3.\
Positive Integers.\
\
Question4.\
Because there are four integers to search for, and they are all correlated, using the for loop the whole searching space would be as large as N^4.\
\
Question5.\
Looking at the program, because there are several \'93break\'94 to control the end of the loop, hence not all the values for b, c, d are searched, which are depending on their own beginning and ending conditions, but for a the searching range is 1 - N^(1/3).\
For a b c d, the orders are all ascending.\
\
Question6.\
For a, the searching range can not be shortened.\
For b, because the values smaller than a have been checked, there\'92s no need for b to start searching from 1, we can directly start from a + 1;\
for c likewise, since a and b are in a group, and we would not expect the overlap between them and c&d, we can search c from a + 1.\
for d which like b to a, we can search directly from c+1, then the whole searching range could be shortened and improved.\
\
Question7.\
See the code Ramanujannew.java.\
\
For the original code and modified one, using N equals 10000, the executions number at last is 119926 vs. 5361.\
using 100000 as input, the number is 3152215 vs.361140.}